name: release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build:
    name: build (${{ matrix.os }} - ${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            ext: ''
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            ext: ''
          - os: macos-latest
            target: aarch64-apple-darwin
            ext: ''
          - os: macos-latest
            target: x86_64-apple-darwin
            ext: ''
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            ext: .exe

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install aarch64 cross-compiler (Linux only)
        if: matrix.os == 'ubuntu-latest' && matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu libc6-dev-arm64-cross

      - name: Configure linker for aarch64 (Linux only)
        if: matrix.os == 'ubuntu-latest' && matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          echo 'CC_aarch64_unknown_linux_gnu=aarch64-linux-gnu-gcc' >> $GITHUB_ENV
          echo 'CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc' >> $GITHUB_ENV

      - name: Build relay
        working-directory: relay
        run: cargo build --release --target ${{ matrix.target }}

      - name: Build rendezvous
        working-directory: rendezvous
        run: cargo build --release --target ${{ matrix.target }}

      - name: Build bootstrap
        working-directory: bootstrap
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package artifacts
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p dist
          RELAY=relay/target/${{ matrix.target }}/release/relay${{ matrix.ext }}
          RV=rendezvous/target/${{ matrix.target }}/release/rendezvous${{ matrix.ext }}
          BT=bootstrap/target/${{ matrix.target }}/release/bootstrap{{ matrix.ext }}
          cp "$RELAY" dist/
          cp "$RV" dist/
          cp "$BT" dist/
          cd dist
          if [[ "${{ matrix.os }}" == windows-latest ]]; then
            powershell.exe -NoLogo -NoProfile -Command "Compress-Archive -Path 'relay${{ matrix.ext }}','rendezvous${{ matrix.ext }}','bootstrap${{ matrix.ext }}' -DestinationPath 'lattica-tools-${{ matrix.target }}.zip' -Force"
          else
            tar -czf "lattica-tools-${{ matrix.target }}.tar.gz" relay${{ matrix.ext }} rendezvous${{ matrix.ext }} bootstrap${{ matrix.ext }}
          fi

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.tar.gz
            dist/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}